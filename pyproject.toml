[tool.poetry]
name = "templat"
version = "1.0.2"
description = ""
authors = ["GabrielCarvalho <gabrielcarvalho.workk@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
pydantic-settings = "^2.7.1"
aiobotocore = "^2.19.0"
aiofiles = "^24.1.0"
fastapi = "^0.115.7"
bcrypt = "^4.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
icecream = "^2.1.4"
ruff = "^0.9.3"
taskipy = "^1.14.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.taskipy.tasks]
run = 'uvicorn app.main:app --reload'
lint = 'ruff .'
pre_test = 'task lint'
test = 'pytest -s -x --capture=no --cov=app -vv'
verbose_test = 'pytest --verbose --show-capture=all --exitfirst --cov=app --cov-report=term-missing -vv'
commit_hook = "pre-commit run --all-files"
post_verbose_test = 'coverage html'
post_test = 'coverage html'

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = ["E701"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
